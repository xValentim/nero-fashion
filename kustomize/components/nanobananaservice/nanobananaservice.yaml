apiVersion: apps/v1
kind: Deployment
metadata:
  name: nanobananaservice
  labels:
    app: nanobananaservice
spec:
  replicas: 1
  selector:
    matchLabels:
      app: nanobananaservice
  template:
    metadata:
      labels:
        app: nanobananaservice
    spec:
      serviceAccountName: nanobananaservice
      containers:
        - name: server
          image: us-central1-docker.pkg.dev/gke-app-hacka/images/nanobananaservice:latest
          ports:
            - containerPort: 8080
          env:
            - name: PRODUCT_CATALOG_SERVICE_ADDR
              value: productcatalogservice:3550
            - name: CART_SERVICE_ADDR
              value: cartservice:7070
            - name: EMAIL_SERVICE_ADDR
              value: emailservice:5000
            - name: GEMINI_API_KEY
              valueFrom:
                secretKeyRef:
                  name: gemini-api
                  key: GEMINI_API_KEY
          readinessProbe:
            httpGet: { path: /health, port: 8080 }
            initialDelaySeconds: 2
            periodSeconds: 5
          livenessProbe:
            httpGet: { path: /health, port: 8080 }
            initialDelaySeconds: 5
            periodSeconds: 10
          resources:
            requests: { cpu: "100m", memory: "128Mi" }
            limits:   { cpu: "500m", memory: "512Mi" }
---
apiVersion: v1
kind: Service
metadata:
  name: nanobananaservice
  labels:
    app: nanobananaservice
spec:
  type: ClusterIP
  selector:
    app: nanobananaservice
  ports:
    - name: http
      port: 8080
      targetPort: 8080
---
apiVersion: v1
kind: Service
metadata:
  name: nanobananaservice-external
  labels:
    app: nanobananaservice
spec:
  type: LoadBalancer
  selector:
    app: nanobananaservice
  ports:
    - name: http
      port: 8080
      targetPort: 8080
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: nanobananaservice

